{
	"info": {
		"_postman_id": "qatar-fein-api-v1",
		"name": "Qatar Fein API - v1",
		"description": "Complete API collection for Qatar Fein train tracking platform with bilingual support (Arabic/English).\n\n**Base URL:** {{base_url}}/api/v1\n**Authentication:** Bearer Token (after phone verification or social login)\n**Default Language:** Arabic (ar)\n\n**Environment Variables Required:**\n- base_url: http://localhost:8000\n- auth_token: (auto-set after authentication)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Send OTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text",
								"description": "Language preference: ar (default) or en"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"+974123456789\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/phone/send-otp",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"phone",
								"send-otp"
							]
						},
						"description": "Send OTP code to phone number for verification.\n\n**Required Fields:**\n- phone: Phone number in international format (+974xxxxxxxxx)\n\n**Rate Limiting:**\n- Max 3 attempts per hour per phone number\n- OTP expires in 5 minutes\n\n**Response:**\n- Success: OTP sent message\n- Error: Validation errors or rate limit exceeded"
					}
				},
				{
					"name": "Verify OTP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        console.log('Auth token saved to environment');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"phone\": \"+974123456789\",\n    \"otp_code\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/phone/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"phone",
								"verify"
							]
						},
						"description": "Verify OTP code and authenticate user.\n\n**Required Fields:**\n- phone: Phone number used for OTP\n- otp_code: 6-digit OTP code received\n\n**Response:**\n- Success: User data + Bearer token (auto-saved to environment)\n- Error: Invalid OTP or expired code\n\n**Auto-creates user account if first time login**"
					}
				},
				{
					"name": "Social Login - Google",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.environment.set('auth_token', response.data.token);",
									"        console.log('Auth token saved to environment');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"provider_id\": \"google_user_id_123\",\n    \"email\": \"user@gmail.com\",\n    \"name\": \"John Doe\",\n    \"avatar\": \"https://lh3.googleusercontent.com/a/avatar.jpg\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/social/google",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"social",
								"google"
							]
						},
						"description": "Social login with Google provider.\n\n**Required Fields:**\n- provider_id: Unique Google user ID\n\n**Optional Fields:**\n- email: User email from Google\n- name: User display name\n- avatar: Profile picture URL\n\n**Supported Providers:**\n- google, apple, facebook\n\n**Response:**\n- Success: User data + Bearer token (auto-saved)"
					}
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"profile"
							]
						},
						"description": "Get current user profile information.\n\n**Authentication:** Required\n\n**Response:**\n- User profile data including:\n  - Phone, email, name, avatar\n  - Preferred language\n  - Reward points\n  - Ad-free status"
					}
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Name\",\n    \"email\": \"newemail@example.com\",\n    \"preferred_language\": \"en\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/auth/profile",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"profile"
							]
						},
						"description": "Update user profile information.\n\n**Authentication:** Required\n\n**Optional Fields:**\n- name: Display name\n- email: Email address (must be unique)\n- preferred_language: ar or en\n- avatar: Profile image file\n\n**Response:**\n- Updated user profile data"
					}
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout and invalidate current access token.\n\n**Authentication:** Required\n\n**Response:**\n- Success confirmation message"
					}
				}
			],
			"description": "Authentication endpoints for phone verification and social login"
		},
		{
			"name": "Trains",
			"item": [
				{
					"name": "Get All Trains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trains?page=1&per_page=20&status=active",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trains"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional, default: 1)"
								},
								{
									"key": "per_page",
									"value": "20",
									"description": "Items per page (optional, default: 20, max: 50)"
								},
								{
									"key": "status",
									"value": "active",
									"description": "Filter by status: active, inactive, maintenance (optional)"
								}
							]
						},
						"description": "Get list of all trains with pagination.\n\n**Authentication:** Not required (public endpoint)\n\n**Query Parameters:**\n- page: Page number (optional)\n- per_page: Items per page (optional, max 50)\n- status: Filter by train status (optional)\n\n**Response:**\n- Array of trains with bilingual names\n- Pagination metadata\n- Each train includes: ID, train_id, name, type, operator, status"
					}
				},
				{
					"name": "Get Train Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trains/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trains",
								"1"
							]
						},
						"description": "Get detailed information about a specific train.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Train ID (required)\n\n**Response:**\n- Complete train information\n- Journey details (origin, destination, total stops)\n- Stop sequence with stations and timing\n- Bilingual content"
					}
				},
				{
					"name": "Get Train Schedule",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trains/1/schedule",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trains",
								"1",
								"schedule"
							]
						},
						"description": "Get train schedule (stop sequence) for a specific train.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Train ID (required)\n\n**Response:**\n- Ordered list of stops with:\n  - Station information (bilingual names)\n  - Arrival and departure times\n  - Stop sequence number\n  - Platform information\n  - Stop duration"
					}
				},
				{
					"name": "Get Train Location",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trains/1/location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trains",
								"1",
								"location"
							]
						},
						"description": "Get current location and status of a specific train.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Train ID (required)\n\n**Response:**\n- Current location (latitude, longitude)\n- Current and next stations\n- Speed and heading\n- Trip status\n- Last update timestamp\n- Delay information"
					}
				},
				{
					"name": "Get Live Trains",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/trains/live?status=in_transit",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"trains",
								"live"
							],
							"query": [
								{
									"key": "status",
									"value": "in_transit",
									"description": "Filter by trip status: scheduled, departed, in_transit, arrived (optional)"
								}
							]
						},
						"description": "Get all currently active/live train trips.\n\n**Authentication:** Not required (public endpoint)\n\n**Query Parameters:**\n- status: Filter by trip status (optional)\n\n**Response:**\n- Array of active train trips\n- Real-time location data\n- Current status and delays\n- Passenger count (if available)"
					}
				}
			],
			"description": "Train information and tracking endpoints"
		},
		{
			"name": "Stations",
			"item": [
				{
					"name": "Get All Stations",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stations?search=cairo&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stations"
							],
							"query": [
								{
									"key": "search",
									"value": "cairo",
									"description": "Search stations by name (optional)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								}
							]
						},
						"description": "Get list of all stations with search and pagination.\n\n**Authentication:** Not required (public endpoint)\n\n**Query Parameters:**\n- search: Search by station name (optional)\n- page: Page number (optional)\n- per_page: Items per page (optional)\n\n**Response:**\n- Array of stations with bilingual names\n- Location coordinates\n- Station facilities\n- Pagination metadata"
					}
				},
				{
					"name": "Get Station Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stations/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stations",
								"1"
							]
						},
						"description": "Get detailed information about a specific station.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Station ID (required)\n\n**Response:**\n- Complete station information\n- Coordinates and location details\n- Available facilities\n- Operating status"
					}
				},
				{
					"name": "Get Station Departures",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stations/1/departures?date=2024-01-15&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stations",
								"1",
								"departures"
							],
							"query": [
								{
									"key": "date",
									"value": "2024-01-15",
									"description": "Date for departures (optional, default: today)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results (optional, default: 20)"
								}
							]
						},
						"description": "Get trains departing from this station.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Station ID (required)\n\n**Query Parameters:**\n- date: Departure date (optional, default: today)\n- limit: Number of results (optional)\n\n**Response:**\n- List of departing trains\n- Departure times and destinations\n- Train information\n- Platform details"
					}
				},
				{
					"name": "Get Station Arrivals",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/stations/1/arrivals?date=2024-01-15&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"stations",
								"1",
								"arrivals"
							],
							"query": [
								{
									"key": "date",
									"value": "2024-01-15",
									"description": "Date for arrivals (optional, default: today)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of results (optional, default: 20)"
								}
							]
						},
						"description": "Get trains arriving at this station.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Station ID (required)\n\n**Query Parameters:**\n- date: Arrival date (optional, default: today)\n- limit: Number of results (optional)\n\n**Response:**\n- List of arriving trains\n- Arrival times and origins\n- Train information\n- Platform details"
					}
				}
			],
			"description": "Station information and train schedules"
		},
		{
			"name": "Assignments",
			"item": [
				{
					"name": "Create Assignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"trip_id\": 1,\n    \"boarding_station_id\": 5,\n    \"destination_station_id\": 15\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/assignments",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments"
							]
						},
						"description": "Create a new passenger assignment to a train trip.\n\n**Authentication:** Required\n\n**Required Fields:**\n- trip_id: Train trip ID\n- boarding_station_id: Station where user will board\n- destination_station_id: Station where user will exit\n\n**Business Rules:**\n- Only one active assignment per user per trip\n- Stations must be on the train's route\n- Trip must be active and available\n\n**Response:**\n- Created assignment details\n- Trip and station information"
					}
				},
				{
					"name": "Get My Assignments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments?status=active&from_date=2024-01-01&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments"
							],
							"query": [
								{
									"key": "status",
									"value": "active",
									"description": "Filter by status: active, completed, cancelled (optional)"
								},
								{
									"key": "from_date",
									"value": "2024-01-01",
									"description": "Filter from date (optional)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								}
							]
						},
						"description": "Get user's passenger assignments with filtering.\n\n**Authentication:** Required\n\n**Query Parameters:**\n- status: Filter by assignment status (optional)\n- from_date: Filter from date (optional)\n- to_date: Filter to date (optional)\n- page: Page number (optional)\n\n**Response:**\n- Array of user's assignments\n- Trip and station details\n- Assignment status and timestamps\n- Pagination metadata"
					}
				},
				{
					"name": "Get Active Assignment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/active",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"active"
							]
						},
						"description": "Get user's currently active assignment (if any).\n\n**Authentication:** Required\n\n**Response:**\n- Current active assignment details\n- Trip information and status\n- Location sharing status\n- null if no active assignment"
					}
				},
				{
					"name": "Get Assignment Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"1"
							]
						},
						"description": "Get details of a specific assignment.\n\n**Authentication:** Required (own assignments only)\n\n**Path Parameters:**\n- id: Assignment ID (required)\n\n**Response:**\n- Complete assignment details\n- Trip and station information\n- Location and timing data"
					}
				},
				{
					"name": "Update Location",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"latitude\": 25.2854,\n    \"longitude\": 51.5310,\n    \"accuracy\": 5.0,\n    \"speed\": 45.5,\n    \"heading\": 180.0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/1/location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"1",
								"location"
							]
						},
						"description": "Update user's current location during active assignment.\n\n**Authentication:** Required\n\n**Path Parameters:**\n- id: Assignment ID (required)\n\n**Required Fields:**\n- latitude: GPS latitude (-90 to 90)\n- longitude: GPS longitude (-180 to 180)\n\n**Optional Fields:**\n- accuracy: Location accuracy in meters\n- speed: Speed in km/h\n- heading: Compass direction (0-359 degrees)\n\n**Requirements:**\n- Assignment must be active\n- Location sharing must be enabled\n\n**Response:**\n- Success confirmation\n- Location update timestamp"
					}
				},
				{
					"name": "Enable Location Sharing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/1/enable-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"1",
								"enable-location"
							]
						},
						"description": "Enable location sharing for an active assignment.\n\n**Authentication:** Required\n\n**Path Parameters:**\n- id: Assignment ID (required)\n\n**Requirements:**\n- Assignment must be active\n- User must own the assignment\n\n**Response:**\n- Success confirmation"
					}
				},
				{
					"name": "Disable Location Sharing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/1/disable-location",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"1",
								"disable-location"
							]
						},
						"description": "Disable location sharing and clear current location.\n\n**Authentication:** Required\n\n**Path Parameters:**\n- id: Assignment ID (required)\n\n**Response:**\n- Success confirmation\n- Location data cleared"
					}
				},
				{
					"name": "Complete Assignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/1/complete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"1",
								"complete"
							]
						},
						"description": "Mark assignment as completed and calculate rewards.\n\n**Authentication:** Required\n\n**Path Parameters:**\n- id: Assignment ID (required)\n\n**Business Logic:**\n- Marks assignment as completed\n- Calculates and awards reward points\n- Disables location sharing\n- Updates user statistics\n\n**Response:**\n- Assignment completion details\n- Awarded rewards information\n- Updated user stats"
					}
				},
				{
					"name": "Cancel Assignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/assignments/1/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"assignments",
								"1",
								"cancel"
							]
						},
						"description": "Cancel an active assignment.\n\n**Authentication:** Required\n\n**Path Parameters:**\n- id: Assignment ID (required)\n\n**Business Logic:**\n- Marks assignment as cancelled\n- Disables location sharing\n- Clears location data\n- No rewards awarded\n\n**Response:**\n- Cancellation confirmation"
					}
				}
			],
			"description": "Passenger assignment and location tracking endpoints"
		},
		{
			"name": "Communities",
			"item": [
				{
					"name": "Get Community",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/communities/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"1"
							]
						},
						"description": "Get community information for a train trip.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- tripId: Train trip ID (required)\n\n**Auto-Creation:**\n- Community is automatically created if doesn't exist\n- Name generated from train information\n\n**Response:**\n- Community details\n- Trip information\n- Member and message counts\n- Community status"
					}
				},
				{
					"name": "Get Community Messages",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/communities/1/messages?type=status_update&station_id=5&verified_only=true&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"1",
								"messages"
							],
							"query": [
								{
									"key": "type",
									"value": "status_update",
									"description": "Filter by message type (optional)"
								},
								{
									"key": "station_id",
									"value": "5",
									"description": "Filter by station (optional)"
								},
								{
									"key": "verified_only",
									"value": "true",
									"description": "Show only verified messages (optional)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								}
							]
						},
						"description": "Get community messages for a train trip.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- tripId: Train trip ID (required)\n\n**Query Parameters:**\n- type: Message type filter (optional)\n- station_id: Station filter (optional)\n- verified_only: Show only verified messages (optional)\n- page: Page number (optional)\n\n**Message Types:**\n- status_update, delay_report, arrival_confirmation\n- departure_confirmation, crowd_level, amenity_status\n\n**Response:**\n- Array of messages with user and station info\n- Verification status and counts\n- Pagination metadata"
					}
				},
				{
					"name": "Post Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"station_id\": 5,\n    \"time_passed_minutes\": 45,\n    \"message_type\": \"status_update\",\n    \"additional_data\": {\n        \"crowd_level\": \"moderate\",\n        \"delay_reason\": \"station_congestion\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/communities/1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"1",
								"messages"
							]
						},
						"description": "Post a structured message to the trip community.\n\n**Authentication:** Required (guests can also post with guest_name)\n\n**Path Parameters:**\n- tripId: Train trip ID (required)\n\n**Required Fields:**\n- station_id: Station where message is posted\n- time_passed_minutes: Minutes since trip departure (0-1440)\n- message_type: Type of message (see list below)\n\n**Optional Fields:**\n- additional_data: Structured data for the message type\n- guest_name: Required if user not authenticated\n\n**Message Types:**\n- status_update, delay_report, arrival_confirmation\n- departure_confirmation, crowd_level, amenity_status\n\n**Rate Limiting:**\n- Max 5 messages per user per trip\n\n**Response:**\n- Posted message details\n- Broadcasting to WebSocket channel"
					}
				},
				{
					"name": "Verify Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"verification_type\": \"confirm\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/v1/communities/1/messages/1/verify",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"communities",
								"1",
								"messages",
								"1",
								"verify"
							]
						},
						"description": "Verify or dispute a community message.\n\n**Authentication:** Required\n\n**Path Parameters:**\n- tripId: Train trip ID (required)\n- messageId: Message ID (required)\n\n**Required Fields:**\n- verification_type: \"confirm\" or \"dispute\"\n\n**Business Rules:**\n- Cannot verify own messages\n- One verification per user per message\n- Message marked as verified with 3+ confirmations > disputes\n\n**Response:**\n- Verification status\n- Updated verification counts\n- Message verification status"
					}
				},
				{
					"name": "Get Message Types",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/message-types",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"message-types"
							]
						},
						"description": "Get available message types with bilingual names and descriptions.\n\n**Authentication:** Not required (public endpoint)\n\n**Response:**\n- Array of message types\n- Bilingual names and descriptions\n- Icons and usage guidelines\n- Structured data examples"
					}
				}
			],
			"description": "Trip-based community messaging endpoints"
		},
		{
			"name": "Rewards & Badges",
			"item": [
				{
					"name": "Get My Rewards",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/rewards/my?type=assignment_completion&from_date=2024-01-01&page=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"rewards",
								"my"
							],
							"query": [
								{
									"key": "type",
									"value": "assignment_completion",
									"description": "Filter by reward type (optional)"
								},
								{
									"key": "from_date",
									"value": "2024-01-01",
									"description": "Filter from date (optional)"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								}
							]
						},
						"description": "Get user's reward history with filtering.\n\n**Authentication:** Required\n\n**Query Parameters:**\n- type: Reward type filter (optional)\n- from_date: Filter from date (optional)\n- to_date: Filter to date (optional)\n- page: Page number (optional)\n\n**Reward Types:**\n- assignment_completion, community_participation\n- accuracy_bonus, milestone, ad_free_period\n\n**Response:**\n- Array of user's rewards\n- Summary statistics\n- Pagination metadata\n- Points earned and descriptions"
					}
				},
				{
					"name": "Get My Badges",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/badges/my",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"my"
							]
						},
						"description": "Get user's earned badges and available badges.\n\n**Authentication:** Required\n\n**Response:**\n- Array of earned badges with timestamps\n- Array of available badges to earn\n- Badge statistics\n- Progress information"
					}
				},
				{
					"name": "Get Badge Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/badges/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"badges",
								"1"
							]
						},
						"description": "Get detailed information about a specific badge.\n\n**Authentication:** Not required (public endpoint)\n\n**Path Parameters:**\n- id: Badge ID (required)\n\n**Response:**\n- Complete badge information\n- Earning criteria and requirements\n- Statistics (total earned, rarity)\n- Bilingual names and descriptions"
					}
				},
				{
					"name": "Get All Badges",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/badges",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"badges"
							]
						},
						"description": "Get all available badges grouped by category.\n\n**Authentication:** Not required (public endpoint)\n\n**Response:**\n- Badges grouped by category\n- Badge information and requirements\n- Rarity and difficulty levels\n- Total badge count"
					}
				},
				{
					"name": "Get Leaderboard",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/leaderboard?type=points&timeframe=this_month",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"leaderboard"
							],
							"query": [
								{
									"key": "type",
									"value": "points",
									"description": "Leaderboard type: points, assignments, badges"
								},
								{
									"key": "timeframe",
									"value": "this_month",
									"description": "Time period: all_time, this_month, this_week"
								}
							]
						},
						"description": "Get leaderboard rankings by different criteria.\n\n**Authentication:** Not required (public endpoint)\n\n**Query Parameters:**\n- type: Ranking type (points, assignments, badges)\n- timeframe: Time period (all_time, this_month, this_week)\n\n**Response:**\n- Top 100 ranked users\n- User rankings and scores\n- Recent badges for each user\n- Total participant count"
					}
				},
				{
					"name": "Get Rewards Summary",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"type": "text"
							},
							{
								"key": "Accept-Language",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api/v1/rewards/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"v1",
								"rewards",
								"summary"
							]
						},
						"description": "Get comprehensive rewards and activity summary.\n\n**Authentication:** Required\n\n**Response:**\n- Overall rewards summary\n- Recent rewards and badges\n- Progress statistics\n- Achievement milestones"
					}
				}
			],
			"description": "Gamification system - rewards, badges, and leaderboards"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-set base URL if not defined",
					"if (!pm.environment.get('base_url')) {",
					"    pm.environment.set('base_url', 'http://localhost:8000');",
					"}",
					"",
					"// Log request details",
					"console.log('Making request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script for all requests",
					"",
					"// Log response status",
					"console.log('Response status:', pm.response.code);",
					"",
					"// Check if response is JSON",
					"pm.test('Response is JSON', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});",
					"",
					"// Check response structure for success",
					"if (pm.response.code === 200 || pm.response.code === 201) {",
					"    pm.test('Response has status field', function () {",
					"        const response = pm.response.json();",
					"        pm.expect(response).to.have.property('status');",
					"    });",
					"}",
					"",
					"// Log any errors",
					"if (pm.response.code >= 400) {",
					"    console.log('Error response:', pm.response.text());",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		}
	]
}